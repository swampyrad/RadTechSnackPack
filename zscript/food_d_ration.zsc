const UAS_HDLD_DRATION = "drt";
const UAS_HDLD_DRATIONBAR = "drb";
const UAS_HDLD_LOGANBAR = "lgn";

//todo: make a proper D ration pack that comes with 3 of these 

class UaS_RationDBar : UaS_Consumable {
	default {
		UaS_Consumable.Calories 600;
		UaS_Consumable.Fluid 0;
		UaS_Consumable.Bulk 6;
		UaS_Consumable.Description "A calorie-dense, oat-based chocolate bar, designed to help U.S. soldiers in WWII get through times when a decent meal was hard to come by. Looks and tastes like dirt, but at least you won't starve.";
		+UaS_Consumable.PACKAGED;
		+UaS_Consumable.RESEALABLE;
		UaS_Consumable.SpoilRate 0;//chocolate doesn't really go bad, right?
		Inventory.PickupMessage "Picked up a D ration bar.";
		tag "D Ration bar";
		hdweapon.refid UAS_HDLD_DRATIONBAR;
		Inventory.Icon "DRATA0";
		Scale 0.5;
	}
	override void Messages() {
		AddOpenText("You pull out the chocolate.");
		AddConsumeText("You nibble at a corner of the bar.");
		AddConsumeText("You gnaw at the chocolate a bit.");
		AddConsumeText("You break off a small chunk to chew on.");
	}
	
	override void InitializeWepStats(bool idfa) {
		Contents();
		weaponstatus[UGCS_CONSUMED] = 0;
		weaponstatus[UGCS_GAVECONTENTS] = false;
	
		weaponstatus[UGCS_OPEN] = UGCSF_SEALED; 
		weaponstatus[UGCS_LASTSPOILTIME] = -1; 
		
        //these should always be intact and ready to eat,
        //since you can add these to your loadout
	}
	
	states(actor){
    spawn:
        DRAT A -1;
        stop;
    }

}

class UaS_LoganBar : UaS_Consumable {
	default {
		UaS_Consumable.Calories 300;
		UaS_Consumable.Fluid 0;
		UaS_Consumable.Bulk 3;
		UaS_Consumable.Description "A smaller version of the D ration bar repackaged for the U.S. Navy. Half the size, tastes just as terrible.";
		+UaS_Consumable.PACKAGED;
		UaS_Consumable.SpoilRate 0;
		Inventory.PickupMessage "Picked up a Logan bar.";
		tag "Logan bar";
		hdweapon.refid UAS_HDLD_LOGANBAR;
		Inventory.Icon "DRATB0";
		Scale 0.5;
	}
	override void Messages() {
		AddOpenText("You pull out the chocolate.");
		AddConsumeText("You nibble at a corner of the bar.");
		AddConsumeText("You gnaw at the chocolate a bit.");
		AddConsumeText("You break off a small chunk to chew on.");
	}
	
	override void InitializeWepStats(bool idfa) {
		Contents();
		weaponstatus[UGCS_CONSUMED] = 0;
		weaponstatus[UGCS_GAVECONTENTS] = false;
	
		weaponstatus[UGCS_OPEN] = UGCSF_SEALED; 
		weaponstatus[UGCS_LASTSPOILTIME] = -1; 
		
        //these should always be intact and ready to eat,
        //since you can add these to your loadout
	}
	
	states(actor){
    spawn:
        DRAT B -1;
        stop;
    }

}
